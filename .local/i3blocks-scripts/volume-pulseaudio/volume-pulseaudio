#!/bin/bash
# Displays the default device, volume, and mute status for i3blocks

set -a

AUDIO_HIGH_SYMBOL=${AUDIO_HIGH_SYMBOL:-' '}

AUDIO_MED_THRESH=${AUDIO_MED_THRESH:-50}
AUDIO_MED_SYMBOL=${AUDIO_MED_SYMBOL:-' '}

AUDIO_LOW_THRESH=${AUDIO_LOW_THRESH:-0}
AUDIO_LOW_SYMBOL=${AUDIO_LOW_SYMBOL:-' '}

AUDIO_MUTED_SYMBOL=${AUDIO_MUTED_SYMBOL:-' '}

AUDIO_DELTA=${AUDIO_DELTA:-5}

DEFAULT_MARKUP=${DEFAULT_MARKUP:-""}
MUTED_MARKUP=${MUTED_MARKUP:-""}

SUBSCRIBE=${SUBSCRIBE:-0}

MIXER=${MIXER:-""}
SCONTROL=${SCONTROL:-""}

while getopts F:Sf:adH:M:L:X:T:t:C:c:i:m:s:h opt; do
    case "$opt" in
        S) SUBSCRIBE=1 ;;
        F) LONG_FORMAT="$OPTARG" ;;
        f) SHORT_FORMAT="$OPTARG" ;;
        H) AUDIO_HIGH_SYMBOL="$OPTARG" ;;
        M) AUDIO_MED_SYMBOL="$OPTARG" ;;
        L) AUDIO_LOW_SYMBOL="$OPTARG" ;;
        X) AUDIO_MUTED_SYMBOL="$OPTARG" ;;
        T) AUDIO_MED_THRESH="$OPTARG" ;;
        t) AUDIO_LOW_THRESH="$OPTARG" ;;
        C) DEFAULT_COLOR="$OPTARG" ;;
        c) MUTED_COLOR="$OPTARG" ;;
        i) AUDIO_INTERVAL="$OPTARG" ;;
        m) MIXER="$OPTARG" ;;
        s) SCONTROL="$OPTARG" ;;
        h) printf \
"Usage: volume-pulseaudio [-S] [-F format] [-f format] [-H symb] [-M symb]
        [-L symb] [-X symb] [-T thresh] [-t thresh] [-C color] [-c color] [-i inter] 
        [-m mixer] [-s scontrol] [-h]
Options:
-S\tSubscribe to volume events (requires persistent block, always uses long format)
-H\tSymbol to use when audio level is high. Default: '$AUDIO_HIGH_SYMBOL'
-M\tSymbol to use when audio level is medium. Default: '$AUDIO_MED_SYMBOL'
-L\tSymbol to use when audio level is low. Default: '$AUDIO_LOW_SYMBOL'
-X\tSymbol to use when audio is muted. Default: '$AUDIO_MUTED_SYMBOL'
-T\tThreshold for medium audio level. Default: $AUDIO_MED_THRESH
-t\tThreshold for low audio level. Default: $AUDIO_LOW_THRESH
-C\tColor for non-muted audio. Default: $DEFAULT_COLOR
-c\tColor for muted audio. Default: $MUTED_COLOR
-i\tInterval size of volume increase/decrease. Default: $AUDIO_DELTA
-m\tUse the given mixer.
-s\tUse the given scontrol.
-h\tShow this help text
" && exit 0;;
    esac
done

if [[ -z "$MIXER" ]] ; then
    MIXER="default"
    if amixer -D pulse info >/dev/null 2>&1 ; then
        MIXER="pulse"
    fi
fi

if [[ -z "$SCONTROL" ]] ; then
    SCONTROL=$(amixer -D "$MIXER" scontrols | sed -n "s/Simple mixer control '\([^']*\)',0/\1/p" | head -n1)
fi

CAPABILITY=$(amixer -D $MIXER get $SCONTROL | sed -n "s/  Capabilities:.*cvolume.*/Capture/p")

case "$BLOCK_BUTTON" in
    1) amixer -q -D $MIXER sset $SCONTROL $CAPABILITY toggle ;;
    4) amixer -q -D $MIXER sset $SCONTROL $CAPABILITY $AUDIO_DELTA%+ ;;
    5) amixer -q -D $MIXER sset $SCONTROL $CAPABILITY $AUDIO_DELTA%- ;;
esac

function print_block {
    local status
    for name in VOL status; do
        read $name
    done< <(amixer sget Master | awk -v RS= -F'[][]' '{print $2"\n"$4}')
    VOL="${VOL:0:-1}" # Remove trailing %
    
    if [[ $status = "on" ]] ; then
        SYMB=$AUDIO_HIGH_SYMBOL
        [[ $VOL -le $AUDIO_MED_THRESH ]] && SYMB=$AUDIO_MED_SYMBOL
        [[ $VOL -le $AUDIO_LOW_THRESH ]] && SYMB=$AUDIO_LOW_SYMBOL
        MARKUP=$DEFAULT_MARKUP
    else
        SYMB=$AUDIO_MUTED_SYMBOL
        MARKUP=$MUTED_MARKUP
    fi

    printf "<span %s>%s%3s%%</span>" "$MARKUP" "$SYMB" "$VOL"
}

print_block
if [[ $SUBSCRIBE == 1 ]] ; then
    while read -r EVENT; do
        print_block
    done < <(pactl subscribe | stdbuf -oL grep change)
fi
